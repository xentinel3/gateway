server.port=8090
spring.application.name=sc-gateway
eureka.client.service-url.defaultZone=http://localhost:8761/eureka

# This enables the route's autoconfiguration using the application name
spring.cloud.gateway.discovery.locator.enabled=true
# typically, the application's name is uppercase so, we enable this to make them lowercase
spring.cloud.gateway.discovery.locator.lower-case-service-id=true

## How to make manual routing
#spring.cloud.gateway.routes[0].id=account-mgmnt-ms
#spring.cloud.gateway.routes[0].uri=lb://account-mgmnt-ms
# Incoming URL path
#spring.cloud.gateway.routes[0].predicates[0].=Path=/weirdpath/different/account/estatus
#spring.cloud.gateway.routes[0].predicates[1].=Method=GET
#An incoming path routed to an internal valid path
#spring.cloud.gateway.routes[0].filters[0]=RewritePath=/weirdpath/different/account/estatus, /account/estatus


# Enable actuator health and info endpoint
management.endpoint.health.enabled=true
management.endpoint.info.enabled=true
management.endpoints.web.exposure.include=health, info
#Info endpoint
management.info.build.enabled=true
management.info.git.enabled=true
management.info.git.mode=full
management.info.env.enabled=true
management.info.defaults.enabled=true

#Actuator Info
info.application.name=Gateway Spring Cloud Microservice
info.application.description=A microservice to enable the spring cloud architecture
info.application.author.name= Julio Cesar

# Security

api.signup.url.path = /users-ms/users
api.login.url.path = /users-ms/users/login
api.h2console.url.path = /users-ms/h2-console

authorization.token.header.name = Authorization
authorization.token.header.prefix = Bearer
token.secret = Sx633NtVdKPntgVEBJ3KAnywqKLmeh

